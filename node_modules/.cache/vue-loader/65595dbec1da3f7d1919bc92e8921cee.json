{"remainingRequest":"/Users/eta/Desktop/namikiscore/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eta/Desktop/namikiscore/src/components/Ranking.vue?vue&type=style&index=0&id=3fe35257&lang=scss&scoped=true&","dependencies":[{"path":"/Users/eta/Desktop/namikiscore/src/components/Ranking.vue","mtime":1550468040155},{"path":"/Users/eta/Desktop/namikiscore/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/eta/Desktop/namikiscore/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/eta/Desktop/namikiscore/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/eta/Desktop/namikiscore/node_modules/sass-loader/lib/loader.js","mtime":1533139052000},{"path":"/Users/eta/Desktop/namikiscore/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eta/Desktop/namikiscore/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.rank-container {\n  height: 100%;\n  width: 100%;\n  padding: 0 0 20px 0;\n}\n\n.rank-cell-rank-crown {\n  position: absolute;\n  height: 50px;\n  width: 50px;\n  margin: -30px 0 0 25px;\n  transform: rotate(30deg);\n}\n\n.rank-cell {\n  position: relative;\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  height: 100px;\n  width: 100%;\n  color: black;\n  font-size: 40px;\n  border-bottom: solid 1px grey;\n  @media screen and (max-width: 600px) {\n    height: 80px;\n  }\n\n  .rank-cell-rank {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 50px;\n    width: 55px;\n    margin-left: 5px;\n    border: solid 2px grey;\n    border-radius: 30px;\n  }\n\n  .rank-cell-name {\n    width: calc((100% - 50px) / 3 * 2);\n    font-size: 0.75em;\n    @media screen and (max-width: 600px) {\n      font-size: 0.5em;\n    }\n  }\n\n  .rank-cell-coin {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 50px;\n    width: calc((100% - 50px) / 3);\n    margin-right: 5px;\n    padding: 0 5px;\n    color: white;\n    background-color: grey;\n    border-radius: 25px;\n    font-size: 0.5em;\n    font-size-adjust: 0.56;\n    @media screen and (max-width: 600px) {\n      width: calc((100% - 50px) / 3);\n    }\n  }\n}\n",{"version":3,"sources":["Ranking.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2EA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Ranking.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"rank-container\">\n    <div class=\"rank-cell\" v-for=\"(value, index) in ranking\" :key=\"index\">\n      <div class=\"rank-cell-rank\">{{index+1}}</div>\n      <img class=\"rank-cell-rank-crown\" src=\"../assets/crown_1.png\" v-if=\"index === 0\">\n      <img class=\"rank-cell-rank-crown\" src=\"../assets/crown_2.png\" v-if=\"index === 1\">\n      <div class=\"rank-cell-name\">{{value.Name}}</div>\n      <div class=\"rank-cell-coin\">{{value.Sumofcoin}}</div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport api from '../js/api.js'\n\nexport default {\n  data () {\n    return {\n      ranking: [\n        // {\n        //   \"name\": \"FumitoHaga\",\n        //   \"someofcoin\": 1000000000\n        // },\n        // {\n        //   \"name\": \"b\",\n        //   \"someofcoin\": 100\n        // },\n        // {\n        //   \"name\": \"c\",\n        //   \"someofcoin\": 100\n        // },\n        // {\n        //   \"name\": \"d\",\n        //   \"someofcoin\": 100\n        // },\n        // {\n        //   \"name\": \"e\",\n        //   \"someofcoin\": 100\n        // },\n        // {\n        //   \"name\": \"f\",\n        //   \"someofcoin\": 100\n        // },\n        // {\n        //   \"name\": \"g\",\n        //   \"someofcoin\": 100\n        // },\n        // {\n        //   \"name\": \"h\",\n        //   \"someofcoin\": 100\n        // },\n        // {\n        //   \"name\": \"i\",\n        //   \"someofcoin\": 100\n        // },\n        // {\n        //   \"name\": \"j\",\n        //   \"someofcoin\": 100\n        // }\n      ]\n    }\n  },\n  created () {\n    api.getRanking().then(res => {\n      if (res !== null && res.result !== 'false') {\n        this.ranking = res\n      }\n    })\n    // console.log(this.ranking)\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style lang=\"scss\" scoped>\n.rank-container {\n  height: 100%;\n  width: 100%;\n  padding: 0 0 20px 0;\n}\n\n.rank-cell-rank-crown {\n  position: absolute;\n  height: 50px;\n  width: 50px;\n  margin: -30px 0 0 25px;\n  transform: rotate(30deg);\n}\n\n.rank-cell {\n  position: relative;\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  height: 100px;\n  width: 100%;\n  color: black;\n  font-size: 40px;\n  border-bottom: solid 1px grey;\n  @media screen and (max-width: 600px) {\n    height: 80px;\n  }\n\n  .rank-cell-rank {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 50px;\n    width: 55px;\n    margin-left: 5px;\n    border: solid 2px grey;\n    border-radius: 30px;\n  }\n\n  .rank-cell-name {\n    width: calc((100% - 50px) / 3 * 2);\n    font-size: 0.75em;\n    @media screen and (max-width: 600px) {\n      font-size: 0.5em;\n    }\n  }\n\n  .rank-cell-coin {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 50px;\n    width: calc((100% - 50px) / 3);\n    margin-right: 5px;\n    padding: 0 5px;\n    color: white;\n    background-color: grey;\n    border-radius: 25px;\n    font-size: 0.5em;\n    font-size-adjust: 0.56;\n    @media screen and (max-width: 600px) {\n      width: calc((100% - 50px) / 3);\n    }\n  }\n}\n</style>\n"]}]}